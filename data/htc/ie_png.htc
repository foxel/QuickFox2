<public:component lightWeight="true">
<public:attach event="onpropertychange" onevent="propertyChanged()" />
<public:attach event="onbeforeprint" onevent="beforePrint()" for="window"/>
<public:attach event="onafterprint" onevent="afterPrint()" for="window"/>
<script>
var supported = /MSIE ((5\.5)|[6789])/.test(navigator.userAgent) &&	navigator.platform == "Win32";

var realSrc;
var blankSrc = "{IMGS}/blank.gif";
var isPrinting = false;
var noSize = (element.currentStyle.width == 'auto' && element.currentStyle.height == 'auto')

if (supported)
    fixImage();

function propertyChanged() {
	if (!supported || isPrinting)
	    return;

	var pName = event.propertyName;
	if (pName != "src")
	    return;
	// if not set to blank
	if (!new RegExp(blankSrc).test(src))
		fixImage();
};
function fixImage() {
	var src = element.src;

	if (src == realSrc && /\.png$/i.test(src)) {
		element.src = blankSrc;
		return;
	}

	if (noSize) {
		if (element.offsetWidth)
			element.style.width = element.offsetWidth + 'px';
		if (element.clientHeight)
			element.style.height = element.clientHeight + 'px';
		if (element.currentStyle.display == 'inline')
			element.style.display = 'inline-block';
	}

    if ( ! new RegExp(blankSrc).test(src))
		realSrc = src;

	if (/\.png$/i.test(realSrc)) {
		element.src = blankSrc;
		element.runtimeStyle.filter = "progid:DXImageTransform.Microsoft." +
			"AlphaImageLoader(src='" + src + "',sizingMethod='scale')";
	}
	else {
		// remove filter
		element.runtimeStyle.filter = "";
	}
}

function beforePrint() {
	isPrinting = true;
	element.src = realSrc;
	element.runtimeStyle.filter = "";
	realSrc = null;
}

function afterPrint() {
	isPrinting = false;
	fixImage();
}

</script>
</public:component>
